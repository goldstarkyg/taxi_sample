<?php defined('SYSPATH') or die('No direct script access.');

return array(
    'alpha'         => ':field must contain only letters',
    'alpha_dash'    => ':field must contain only numbers, letters and dashes',
    'alpha_numeric' => ':field must contain only letters and numbers',
    'color'         => ':field must be a color',
    'credit_card'   => ':field must be a credit card number',
    'date'          => ':field must be a date',
    'decimal'       => ':field must be a decimal with :param2 places',
    'digit'         => ':field must be a digit',
    'email'         => ':field must be a email address',
    'email_domain'  => ':field must contain a valid email domain',
    'equals'        => ':field must equal :param2',
    'exact_length'  => ':field must be exactly :param2 characters long',
    'in_array'      => ':field must be one of the available options',
    'ip'            => ':field must be an ip address',
    'matches'       => ':field must be the same as :param2',
    'min_length'    => ':field '.__('validate_min_length').' :param2 '.__('characters').' '.__('long'),
    'max_length'    => ':field '.__('validate_max_length').' :param2 '.__('characters').' '.__('long'),
    'not_empty'     => __(':field')." ".__('must_not_empty'),//':field must not be empty',
    'numeric'       => ':field must be numeric',
    'phone'         => ':field must be a number',
    'phone1'        => ':field must be a number',
    'contact_phone' => ':field must be a number',
    'range'         => ':field must be within the range of :param2 to :param3',
    'regex'         => ':field does not match the required format',
    'url'           => ':field must be a url',
    'Upload::not_empty' => ':field'.' is required',
    'Upload::type'      => ':field'.' format should be :param2',
    'Upload::size'      => ':field'.' size should be less than :param2',
    'Model_Add::checkusername' =>'Username already exist !',
    'Model_Add::checkmotorname' => 'Brand name already exist !',
    'Model_Add::checkfaqtitle' => 'Faq title already exist !',
    'Model_Edit::checkmotor' => 'Brand name already exist !',
    'Model_Add::checkmodelname' => 'Model name already exist in the company !',
    'Model_Edit::checkmodel' => 'Model name already exist in the company !',
    'Model_Edit::checkfaqtitle' => 'Faq title already exist !',
    'Errors.photo.Upload::type' => 'Image should be in following format only .jpg, .gif, .png',
    'Model_Add::checkemail' => 'Email address already exist !',
    'Model_Add::check_taxino' => 'Taxi number already exist in the application',
    'Model_Edit::check_taxino' => 'Taxi number already exist in the application',
    'Model_Edit::checkmodelname' => 'Model name already exist for this company !',
    'small_letters' => 'Please enter only small alphabetic value !',
    'Model_Edit::checkcountryname' => 'Country name already exist !',
    'Model_Edit::checkisocountrycode' => 'ISO country code already exist !',
    'Model_Edit::checkcityname' => 'City name already exist !',
    'Model_Edit::checkcompany' => 'Company already exist in the city',
    'Model_Add::checkname' => 'Username Already Exist!!!',
    'Model_Add::checkphones' => 'Phone Number Already Exist!!!',
    'Model_Add::checkmanagercompany' => 'Manager already added for the city and company',
    'Model_Edit::checkmanagercompany' => 'Manager Already added for the city and company',
    'Model_Add::checkassigntaxi' => 'Driver or Taxi, already assigned between the date !!',
    'Model_Edit::checkassigntaxi' => 'Driver or Taxi, already assigned between the date !!',
    'Model_Add::checkcityname' => 'City name already exist !',
    'Model_Edit::checkstatename' => 'State name already exist !',
    'Model_Add::checkstatename' => 'State name already exist !',
    'Model_Add::checkcountryname' => 'Country name already exist !',
    'Model_Add::checkisocountrycode' => 'ISO country code already exist !',
    'Errors.password.valid_password' => 'Password validation error',
    'Model_Add::checkcompany' => 'Company name already exist in the application !!',
    'Model_Authorize::check_pass' => 'Old password is incorrect!',
    'Model_Edit::checkemail' => 'Email Address already exist !',
    'Model_Manage::date_diff' => 'Startdate should not be greater that enddate',
    'Model_Manage::checkunavailable' => 'Already, leave is marked for those days !',
    'Model_Edit::date_diff' => 'Startdate should not be greater that enddate',
    'Model_Edit::checkunavailable' => 'Already, leave is marked for those days !',
    'Model_Authorize::forgotpassword_emailcheck' => 'Email id not matches our database..',
    'Model_Add::checkphone' => 'Phone number already exist !',
    'Model_Edit::checkphone' => 'Phone number already exist !',
    'Model_Siteusers::checkphone' => 'Phone number already exist !',
    'Model_Add::checkphone_autocreate' => 'Phone number already exist !',
    'Model_Edit::checkassigneddriver' => "Unable to change user information, you have assigned the taxi for the driver!",
    'Model_Edit::checkassignedtaxi' => "Unable to change taxi information, You have assigned the driver for the taxi!",
    'Model_Authorize::forgotpassword_emailmanagercheck' => 'Please enter valid email Id',
    'Model_Authorize::forgotpassword_emailcompanycheck' => 'Please enter valid email Id',
    'Model_Passengers::validatemonth' => 'Credit card validity date is expired',
    'Model_Passengers::validatecreditcard' => 'Please enter valid credit card number',
    'Model_Add::check_reg_countryname' => 'Country name must contain only letters and space',
    'Model_Edit::check_reg_countryname' => 'Country name must contain only letters and space',
    'Model_Add::check_reg_state_name' => 'State name must contain only letters and space',
    'Model_Edit::check_reg_state_name' => 'State name must contain only letters and space',
    'Model_Add::check_reg_city_name' => 'City name must contain only letters and space',
    'Model_Edit::check_reg_city_name' => 'City name must contain only letters and space',
    'Model_Add::minimum_luggage_taxi' => 'Mimimum luggage must be greater than zero',
    'Model_Add::check_base_fare' => 'Enter the base fare in number format (For example: 48,34.56)',
    'Model_Add::check_min_fare' => 'Enter the minimum fare in number format (For example: 50,60.56)',
    'Model_Add::check_cancellation_fare' => 'Enter the cancellation fare in number format (For example: 150,200.50)',
    'Model_Add::check_below_km' => 'Enter the below 10 kilo meter in number format (For example: 7,6.50)',
    'Model_Add::check_above_km' => 'Enter the above 10 kilo meter in number format (For example: 12,15.50)',
    'Model_Add::check_night_fare' => 'Enter the night fare in number format (For example: 50,60.5)',
    'Model_Add::check_evening_fare' => 'Enter the evening fare in number format (For example: 50,60.5)',
    'Model_Add::check_booking_limit' => 'Enter the booking limit in number format (For example: 50,60)',
    'Model_Edit::check_waiting_time' => 'Enter the taxi waiting charge in number format (For example: 120,135.50)',
    'Model_Edit::check_base_fare' => 'Enter the base fare in number format (For example: 48,34.56)',
    'Model_Edit::check_min_fare' => 'Enter the minimum fare in number format (For example: 50,60.56)',
    'Model_Edit::check_cancellation_fare' => 'Enter the cancellation fare in number format (For example: 150,200.50)',
    'Model_Edit::check_below_km' => 'Enter the below 10 kilo meter in number format (For example: 7,6.50)',
    'Model_Edit::check_above_km' => 'Enter the above 10 kilo meter in number format (For example: 12,15.50)',
    'Model_Edit::check_waiting_time' => 'Enter the taxi waiting charge in number format (For example: 120,135.50)',
    'Model_Edit::check_night_fare' => 'Enter the night fare in number format (For example: 50,60.5)',
    'Model_Edit::check_booking_limit' => 'Enter the booking limit in number format (For example: 50,60)',
    'Model_Add::checkdomain' => 'Domain name already exist',
    'Model_Manage::checkpageurl' => 'Page url already exist for your company',
    'Model_Add::checkpackagename' => 'Package name already exist !',
    'Model_Tdispatch::checklocationname' => 'Location name already exist !!',
    'Model_Tdispatch::checkjourneyname' => 'Journey Name already exist !!',
    'Model_Add::checkfieldname' => 'Field name already exist !!',
    'Model_Add::check_below_and_above_km' => 'Below and above KM range should greater than mimimum KM',
    'Model_Edit::check_passengeremail' => 'Email already exists',
    'Model_Admin::checksite_currency' => 'Selected currency symbol not equal to currrency code!',
    'Model_Edit::checksite_currency' => 'Selected currency symbol not equal to currrency code!',
    'Model_Admin::check_wallet_amount_range' => 'Please enter valid wallet amount range (For example: 100-2000)',
    'Model_Admin::compare_wallet_amount1' => 'Wallet amount1 should be less than wallet amount2 and wallet amount3',
    'Model_Admin::compare_wallet_amount2' => 'Wallet amount2 should be less than wallet amount3',

    'Model_Edit::check_fare_zero' => ':field should not be zero',
    'Model_Siteusers::checkurlgiven' => 'Website Urls not permitted',
    'Controller_Mobile100::checkwithpassword' => 'Confirm password does not match with Password',
    'Model_Add::check_valid_phone_number' => 'Please enter valid phone number',
    'Model_Add::checkNationalinsuranceNo' => 'Driver national insurance number already exist!',
    'Model_Add::checkinsuranceNo' => 'Driver insurance number already exist!',
    'Model_Add::checkpcolicenceNo' => 'Driver PCO license number already exist!',
    'Model_Add::checklicenceId' => 'Driver license id already exist!',
    'Model_Edit::checkNationalinsuranceNo' => 'Driver national insurance number already exist!',
    'Model_Edit::checkinsuranceNo' => 'Driver insurance number already exist!',
    'Model_Edit::checkpcolicenceNo' => 'Driver PCO license number already exist!',
    'Model_Edit::checklicenceId' => 'Driver license id already exist!',
    'Model_Add::check_taxipco_number' => 'Taxi pco licence number already exist!',
    'Model_Add::check_taxinsurance_number' => 'Taxi insurance number already exist!',
    'Model_Edit::check_taxipco_number' => 'Taxi pco licence number already exist!',
    'Model_Edit::check_taxinsurance_number' => 'Taxi insurance number already exist!',
    'Model_Company::check_percentage' => 'The percentage value should be less than 100',
    'Model_Admin::check_percentage' => 'The percentage value should be less than 100',
    'Model_Add::checkpackageExists' => 'Package specifications already exist',
    'Model_Authorize::check_valid_phone_format' => 'Mobile Number is invalid (For example: +1-88888891)',
    //passenger signup form validation
    'Model_Find::signupEmailExist' => 'Email already exist',
    'Model_Find::signupPhoneExist' => 'Mobile Number already exist',
    'Model_Find::checkConfirmPassword' => 'Confirm password must be the same as new password',
    'Model_Find::checkValidCard' => 'Credit card number should be valid',
    'Model_Find::checkMonthYear' => 'Expiration month/year should be greater current month/year',
    'Model_Find::checkRefCodeExist' => 'Referral code is not valid',
    'Model_Find::checklaterTime' => 'Pickup time should be greater than one hour for later booking',
    'Model_Siteusers::check_passenger_email' => __('email_already_exist'),
    'Model_Siteusers::check_passenger_phone' => __('mobile_already_exist'),
    'Model_Edit::checkstatecity' => 'State without cities only can be assigned to other country',
    'Model_Edit::checkmodelfare' => 'City model fare should be less then or equal to 100',
    'Model_Add::menu_name_exits' => 'The menu name already exits. Please add a new menu name.',
    'Model_Edit::menu_name_exits' => 'The menu name already exits. Please add a new menu name.',
    'Model_Domain::check_is_domain_name'=>'Enter valid domain name',
    'Model_Domain::check_taxi_domain'=>'Your domain name is not allowed since a .taximobility.com domain already exists for your application',
    'Model_Edit::check_passengerphone' => 'Phone Number Already Exist!',
    'Model_Add::chackstart_enddate' => 'Start date should not be greater than OR equal to End date',    
);
