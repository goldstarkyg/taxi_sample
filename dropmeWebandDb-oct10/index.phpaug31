<?php
ob_start();
/**
 * The directory in which your application specific resources are located.
 * The application directory must contain the bootstrap.php file.
 *
 * @link http://kohanaframework.org/guide/about.install#application
 */
$application = 'application';

/**
 * The directory in which your modules are located.
 *
 * @link http://kohanaframework.org/guide/about.install#modules
 */
$modules = 'modules';

/**
 * The directory in which the Kohana resources are located. The system
 * directory must contain the classes/kohana.php file.
 *
 * @link http://kohanaframework.org/guide/about.install#system
 */
$system = 'system';

/**
 * The default extension of resource files. If you change this, all resources
 * must be renamed to use the new extension.
 *
 * @link http://kohanaframework.org/guide/about.install#ext
 */
define('EXT', '.php');

/**
 * Set the PHP error reporting level. If you set this in php.ini, you remove this.
 * @link http://www.php.net/manual/errorfunc.configuration#ini.error-reporting
 *
 * When developing your application, it is highly recommended to enable notices
 * and strict warnings. Enable them by using: E_ALL | E_STRICT
 *
 * In a production environment, it is safe to ignore notices and strict warnings.
 * Disable them by using: E_ALL ^ E_NOTICE
 *
 * When using a legacy application with PHP >= 5.3, it is recommended to disable
 * deprecated notices. Disable with: E_ALL & ~E_DEPRECATED
 */
ini_set('display_errors', 'On');

# Error reporting may look like this but E_ALL is only what we need
error_reporting(E_ALL | E_STRICT);

/**
 * End of standard configuration! Changing any of the code below should only be
 * attempted by those with a working knowledge of Kohana internals.
 *
 * @link http://kohanaframework.org/guide/using.configuration
 */

// Set the full path to the docroot
define('DOCROOT', realpath(dirname(__FILE__)).DIRECTORY_SEPARATOR);

// Make the application relative to the docroot, for symlink'd index.php
if ( ! is_dir($application) AND is_dir(DOCROOT.$application))
	$application = DOCROOT.$application;

// Make the modules relative to the docroot, for symlink'd index.php
if ( ! is_dir($modules) AND is_dir(DOCROOT.$modules))
	$modules = DOCROOT.$modules;

// Make the system relative to the docroot, for symlink'd index.php
if ( ! is_dir($system) AND is_dir(DOCROOT.$system))
	$system = DOCROOT.$system;

// Define the absolute paths for configured directories
define('APPPATH', realpath($application).DIRECTORY_SEPARATOR);
define('MODPATH', realpath($modules).DIRECTORY_SEPARATOR);
define('SYSPATH', realpath($system).DIRECTORY_SEPARATOR);




// Define database configuration
$servername = "34.197.197.136:48018";
$username = "mongodropmetxi";
$password = "ThAlaSUgAn4k18Sal";
$dbname = "dropmetxi";


define('DBSERVERNAME', $servername);
define('DBUSERNAME', $username);
define('DBPASSWORD', $password);


$urlSegments = parse_url($_SERVER["SERVER_NAME"]);
$urlHostSegments = explode('.', $urlSegments['path']);
$dbname = str_replace("-","_",$urlHostSegments[0]);

$httphost = $_SERVER["HTTP_HOST"];

// Clean up the configuration vars
unset($application, $modules, $system);

if (file_exists('install'.EXT))
{
	// Load the installation check
	return include 'install'.EXT;
}

/**
 * Define the start time of the application, used for profiling.
 */
if ( ! defined('KOHANA_START_TIME'))
{
	define('KOHANA_START_TIME', microtime(TRUE));
}

/**
 * Define the memory usage at the start of the application, used for profiling.
 */
if ( ! defined('KOHANA_START_MEMORY'))
{
	define('KOHANA_START_MEMORY', memory_get_usage());
}

$customlangpath = '';
$val = 0;
//session_start();
//$check_subdomaindb = Session::instance();
//isset($_SESSION[$dbname])?print_r($_SESSION[$dbname]):'';

//if(($dbname != "www")||($dbname != "mongo")){
		$domain_name = "loadtest";
		//~ $domain_name = "ioslatest";
		$mongodbname = "dropmetaxi";

		if($httphost) {
	   // $manager = new MongoDB\Driver\Manager("mongodb://myusername:myp%40ss%3Aw%25rd@example.com/mydatabase"); 
		$manager = new MongoDB\Driver\Manager('mongodb://mongodropmetxi:ThAlaSUgAn4k18Sal@34.197.197.136:48018');
		$writeConcern = new MongoDB\Driver\WriteConcern(MongoDB\Driver\WriteConcern::MAJORITY, 100);
			//if($dbname != "mongo"){
				$filter = ['$or'=>[['live_domain' => $httphost],['live_host_domain'=> $httphost]]];
			   // $filter = ['live_domain' => $httphost];
				$options = [
				'projection' => ['_id' => 1,'company_domain'=>1],
				];

				$query = new MongoDB\Driver\Query($filter, $options);
				$rows = $manager->executeQuery($mongodbname.'.company_domain', $query);
				
			if(!empty($rows)){
				foreach($rows as $r){	
					$val = 1;
					$domain_name = $r->company_domain;
					$dbname=$domain_name;
				}
	
				if ($val != 0) {
					$_SESSION[$dbname] = 1;
		
				} else {
					header('Location: http://www.taximobility.com/');
					exit;
				}
			}else {
				header('Location: http://www.taximobility.com/');
				exit;
			}
			//}
		}

		define('SUBDOMAIN_NAME', $domain_name);
              $customlangpath = 'public/'.$domain_name;

//        }
//session_abort();
if ( ! is_dir($customlangpath) AND is_dir(DOCROOT.$customlangpath))
        $customlangpath = DOCROOT.$customlangpath;
define('CUSTOMLANGPATH', realpath($customlangpath).DIRECTORY_SEPARATOR);
define('DBDATABASENAME', $dbname);



// Bootstrap the application
require APPPATH.'bootstrap'.EXT;

$check_subdomaindb = Session::instance();
if(!isset($_SESSION[$dbname])){
	if ($val != 0) {
					$_SESSION[$dbname] = 1;
		
				}
}

/**
* Execute the main request. A source of the URI can be passed, eg: $_SERVER['PATH_INFO'].
* If no source is specified, the URI will be automatically detected.
*/
#LAMP 7.0 Supported purpose we are added try catch method here
try{
echo Request::factory()
       ->execute()
       ->send_headers(TRUE)
       ->body();
}
catch (Error $e) //  php7 Throwable
{
   throw new ErrorException($e->getMessage(), $e->getCode(), 0, $e->getFile(), $e->getLine());
}
	
	
	
